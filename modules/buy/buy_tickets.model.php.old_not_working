<?php


function authenticate () {
	//implement your own or call either
	return authUser();
	//or
	//authUser();
	//defined in Framework
}

function work() {
	$result = array();
	//authenticate user first
	$userID = $_SESSION['userID'];
	//	$purchases = $_SESSION['cart'];

	$purchases = array(array('eventID' => '1', 'category' => 'premium',
						 'price' => 20, 'number' => 3));
	// Expecting an array named 'cart' filled with single purchases as eventid, category,
	// price and number of tickets in the session



	//Connect to database
	$db_handle = @ new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);

	if (mysqli_connect_errno()) {
		if (DEBUG) {
			trigger_error("Connection failed: " . mysqli_connect_error(), E_USER_ERROR);
			return false;
		}
		else {

			trigger_error("Connection failed: " . mysqli_connect_error(), E_USER_ERROR);
			return false;
		}
	}




	$sql_query_seatID = 'SELECT MAX(seatID) FROM `purchases` WHERE eventID = ?';

	//$sql_insert_query = 'INSERT INTO purchases VALUES (?, ?, ?, ?, ?, ?, ?)';



	if ($stmt_seatID = $db_handle->prepare($sql_query_seatID)
	//$stmt_insert = $db_handle->prepare($sql_insert_query)
	) {
			
		foreach ($purchases AS $purchase) {
			$eventID = $purchase['eventID'];
			$category = $purchase['category'];
			$number = $purchase['number'];
			$status = 'pending';

			$stmt_seatID->bind_param('i', $eventID);
			$stmt_seatID->execute();
			$stmt_seatID->bind_result($seatID);
			$stmt_seatID->fetch();

			$stmt_seatID->close();
			//$stmt_seatID->free_result();
			//		$stmt_insert->close();



			//Now we have the highest $seatID for this event - lets insert the datasets
			for ($i=1; $i<=$number; $i++){
				$newSeat = $seatID + $i;

				$db_handle2 = @ new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);

				//				$sql = 'INSERT INTO `stss`.`purchases` (`eventID`, `userID`, `seatID`, `category`, `purchaseDate`, `status`)
				//						VALUES (\''.$eventID.'\', \''.$userID.'\', \''.$newSeat.'\', \''
				//						.$category.'\', NOW(), \''.$status.'\');';
				//
				//						$sql_result = $db_handle2->query($sql);

//				$sql_insert_query = 'INSERT INTO `stss`.`purchases` (`eventID`, `userID`, `seatID`, `category`, `purchaseDate`, `status`)
//						VALUES (\'?\', \'?\', \'?\', \'?\', NOW(), \'?\');';	
				$sql_insert_query = "INSERT INTO purchases (eventID, userID, seatID, category, purchaseDate, status)
										VALUES (:eventID, :userID, :newSeat, :category, NOW(), :status)";		

				$stmt_insert = $db_handle2->prepare($sql_insert_query);
				//$stmt_insert->bind_param('iiiss', $eventID, $userID, $newSeat, $category, $status);
				$stmt_insert->bind_param(':eventID', $eventID);
				$stmt_insert->bind_param(':userID', $userID);
				$stmt_insert->bind_param(':newSeat', $newSeat);
				$stmt_insert->bind_param(':category', $category);
				$stmt_insert->bind_param(':status', $status);
				$stmt_insert->execute();
				$stmt_insert->bind_result($sql_insert_result);
				//$stmt_insert->fetch();
				$stmt_insert->free_result();
				echo "sql result: $sql_insert_result<br>";
			}





		}

	} else {
		trigger_error("Invalid query.");
		return false;
	}
	$db_handle->close();

	return $result;
}


?>